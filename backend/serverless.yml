service: u-control-backend

frameworkVersion: '4'

# Serverless Framework Configuration
configValidationMode: error

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  deploymentBucket:
    name: ${env:AWS_DEPLOYMENT_BUCKET, 'u-control-906421059987'}
    serverSideEncryption: AES256
  environment:
    STAGE: ${self:provider.stage}
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_DATABASE: ${env:PG_DATABASE}
    PG_USER: ${env:PG_USER}
    PG_PASSWORD: ${env:PG_PASSWORD}
    JWT_SECRET: ${env:JWT_SECRET}
  # IAM permissions for external services (PostgreSQL, S3, etc.)
  # No specific IAM permissions needed for external PostgreSQL database

functions:
  hello:
    handler: src/handlers/hello.handler
    events:
      - http:
          path: hello
          method: get
          cors: true
      - http:
          path: hello
          method: options
          cors: true
  
  version:
    handler: src/handlers/version.handler
    events:
      - http:
          path: version
          method: get
          cors: true
      - http:
          path: version
          method: options
          cors: true
    package:
      patterns:
        - '!node_modules/.cache/**'
        - '!**/__tests__/**'
        - '!**/*.test.js'
        - '!**/*.spec.js'

  health:
    handler: src/handlers/health.handler
    events:
      - http:
          path: health
          method: get
          cors: true
      - http:
          path: health
          method: options
          cors: true
    package:
      patterns:
        - '!node_modules/.cache/**'
        - '!**/__tests__/**'
        - '!**/*.test.js'
        - '!**/*.spec.js'

  accounts:
    handler: src/handlers/accounts.handler
    events:
      - http:
          path: accounts
          method: get
          cors: true
      - http:
          path: accounts
          method: post
          cors: true
      - http:
          path: accounts
          method: options
          cors: true
      - http:
          path: accounts/{id}
          method: get
          cors: true
      - http:
          path: accounts/{id}
          method: put
          cors: true
      - http:
          path: accounts/{id}
          method: delete
          cors: true
      - http:
          path: accounts/{id}
          method: options
          cors: true
    package:
      patterns:
        - '!node_modules/.cache/**'
        - '!**/__tests__/**'
        - '!**/*.test.js'
        - '!**/*.spec.js'

  incomes:
    handler: src/handlers/incomes.handler
    events:
      - http:
          path: incomes
          method: get
          cors: true
      - http:
          path: incomes
          method: post
          cors: true
      - http:
          path: incomes
          method: options
          cors: true
      - http:
          path: incomes/{id}
          method: get
          cors: true
      - http:
          path: incomes/{id}
          method: put
          cors: true
      - http:
          path: incomes/{id}
          method: delete
          cors: true
      - http:
          path: incomes/{id}
          method: options
          cors: true
    package:
      patterns:
        - '!node_modules/.cache/**'
        - '!**/__tests__/**'
        - '!**/*.test.js'
        - '!**/*.spec.js'

  budgets:
    handler: src/handlers/budgets.handler
    events:
      - http:
          path: budgets
          method: get
          cors: true
      - http:
          path: budgets
          method: post
          cors: true
      - http:
          path: budgets
          method: options
          cors: true
      - http:
          path: budgets/{id}
          method: get
          cors: true
      - http:
          path: budgets/{id}
          method: put
          cors: true
      - http:
          path: budgets/{id}
          method: delete
          cors: true
      - http:
          path: budgets/{id}
          method: options
          cors: true
    package:
      patterns:
        - '!node_modules/.cache/**'
        - '!**/__tests__/**'
        - '!**/*.test.js'
        - '!**/*.spec.js'

  expenses:
    handler: src/handlers/expenses.handler
    events:
      - http:
          path: expenses
          method: get
          cors: true
      - http:
          path: expenses
          method: post
          cors: true
      - http:
          path: expenses
          method: options
          cors: true
      - http:
          path: expenses/{id}
          method: get
          cors: true
      - http:
          path: expenses/{id}
          method: put
          cors: true
      - http:
          path: expenses/{id}
          method: delete
          cors: true
      - http:
          path: expenses/{id}
          method: options
          cors: true
    package:
      patterns:
        - '!node_modules/.cache/**'
        - '!**/__tests__/**'
        - '!**/*.test.js'
        - '!**/*.spec.js'

plugins:
  - serverless-offline

build:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    exclude:
      - 'aws-sdk'
    target: 'node18'
    platform: 'node'

custom:
  serverless-offline:
    httpPort: 3001
    host: 0.0.0.0
